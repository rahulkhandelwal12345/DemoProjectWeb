package com.demo.pages;

import org.openqa.selenium.WebDriver;
import org.openqa.selenium.WebElement;
import org.openqa.selenium.support.FindBy;
import org.openqa.selenium.support.PageFactory;

import com.demo.setup.BaseSelenium;
import com.demo.utilities.Utilities;

import net.bytebuddy.asm.MemberSubstitution.FieldValue;

public class LoginPage extends BaseSelenium {
	public WebDriver driver;
	Utilities utilities = new Utilities();

	@FindBy(id = "email")
	private WebElement Email;

	@FindBy(id = "pass")
	private WebElement Password;

	@FindBy(name = "login")
	private WebElement Login_btn;

	@FindBy(xpath = "//span[contains(text(),'Jay')]")
	private WebElement Login_Username;

	@FindBy(xpath = "//*[@id=\"scrollview\"]/div/div/div/div[1]/div/div[3]/div[1]/div[1]/span/div/i")
	private WebElement arrowicon;

	@FindBy(xpath = "//span[contains(text(),'Log Out')]")
	private WebElement logout_btn;

	@FindBy(xpath = "//span[contains(text(),'Log Out')]")
	private WebElement confirmation_logout_btn;

	@FindBy(xpath = "//div[contains(text(),'Recent logins')]")
	private WebElement recentLogin;
	
	@FindBy(xpath = "//*[@id=\"loginform\"]/div[1]/div[2]")
	private WebElement errormessage;

	public WebElement recent_login_disply() {
		return recentLogin;
	}

	public void click_arrowicon() {
		utilities.click(arrowicon);

	}

	public void click_logout_btn() {
		utilities.click(logout_btn);

	}

	public void click_conformation_Logout_btn() {
		utilities.click(confirmation_logout_btn);

	}

	public LoginPage(WebDriver driver) {

		this.driver = driver;
		PageFactory.initElements(driver, this);

	}

	public void enterValidEmail() {
		utilities.sendkeys(Email, "rahul.khandelwal664@gmail.com");
	}

	public void enterValidPassword() throws InterruptedException {
		utilities.sendkeys(Password, "rahul@123");
	}
	
	public void enterInvalidPassword() throws InterruptedException {
		utilities.sendkeys(Password, "rahul@12356");
	}

	public void click_login_btn() {
		utilities.click(Login_btn);
	}

	public WebElement verify_user_name() {
		return Login_Username;
	}
	 
	public String validateErrorMessage() {
		return utilities.getText(errormessage);
	}
	

}
